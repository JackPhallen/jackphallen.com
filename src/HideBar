// import React, {FunctionComponent} from 'react';
// import { makeStyles } from '@material-ui/core/styles';
// import Box from "@material-ui/core/Box";
// import {AppState} from "../state/store";
// import {connect} from "react-redux";
// import {Direction} from "../state/scroll/types";
// import Slide from "@material-ui/core/Slide";
//
// const HEIGHT = 80;
//
// const useStyles = makeStyles(theme => ({
//     root: {
//         position: 'fixed',
//         top: 0,
//         height: HEIGHT,
//         display: "flex",
//         width: '100%',
//         zIndex: 3,
//         alignItems: "flex-end"
//     },
//     inFocus: {
//         backgroundColor: theme.palette.background.paper
//     },
//     outFocus: {
//         backgroundColor: theme.palette.background.default
//     },
// }));
//
// interface Props {
//     position: number;
//     direction: Direction;
// }
//
// const HideBar: FunctionComponent<Props> = (props) => {
//     const classes = useStyles();
//
//     const getDisplayProps = (position: number) => {
//         if (position > HEIGHT) {
//             return({
//                 className: `${classes.root} ${classes.inFocus}`,
//                 boxShadow: 2
//             });
//         } else {
//             return({
//                 className: `${classes.root} ${classes.outFocus}`,
//                 boxShadow: 0
//             });
//         }
//     };
//
//     return (
//         <Slide appear={false} direction="down" in={props.direction === Direction.UP}>
//             <Box { ...getDisplayProps(props.position) } >
//                 { props.children }
//             </Box>
//         </Slide>
//     )
//
// };
//
// const mapStateToProps = (state: AppState) => ({
//     position: state.scroll.position,
//     direction: state.scroll.direction,
// });
//
// export default connect(mapStateToProps)(HideBar);
//
//
//
//
